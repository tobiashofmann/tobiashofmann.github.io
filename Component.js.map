{"version":3,"file":"Component.js","names":["support","sap_ui_Device","models","_interopRequireDefault","__models","Component","UIComponent","extend","metadata","manifest","init","_init","UIComponent.prototype.init.call","setModel","createDeviceModel","getRouter","initialize","getContentDensityClass","_getContentDensityClass","contentDensityClass","undefined","document","body","classList","contains","touch"],"sources":["Component.ts"],"sourcesContent":["import UIComponent from \"sap/ui/core/UIComponent\";\nimport { support } from \"sap/ui/Device\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport models from \"./model/models\";\n\n/**\n * @namespace de.itsfullofstars.bingo.bingo\n */\nexport default class Component extends UIComponent {\n\n\tpublic static metadata = {\n\t\tmanifest: \"json\"\n\t};\n\n\tprivate contentDensityClass : string;\n\n\tpublic init() : void {\n\t\t// call the base component's init function\n\t\tsuper.init();\n\n\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\n/*\n\t\t// buzzowrd model. loaded from the \"internet\"\n\t\tconst buzzwordsModel:JSONModel = this.getModel() as JSONModel;\n\t\tbuzzwordsModel.dataLoaded()\n\t\t.then( () => {\n\t\t\tconsole.log(\"buzzwords laoded\");\n\t\t\tconsole.log(buzzwordsModel.getData());\n\t\t})\n\t\t.catch( () => console.log(\"error\"));\t\t\n*/\n\t\t// create the views based on the url/hash\n\t\tthis.getRouter().initialize();\n\t}\n\n\t/**\n\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t * design mode class should be set, which influences the size appearance of some controls.\n\t *\n\t * @public\n\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t */\n\tpublic getContentDensityClass() : string {\n\t\tif (this.contentDensityClass === undefined) {\n\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\tif (document.body.classList.contains(\"sapUiSizeCozy\") || document.body.classList.contains(\"sapUiSizeCompact\")) {\n\t\t\t\tthis.contentDensityClass = \"\";\n\t\t\t} else if (!support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCompact\";\n\t\t\t} else {\n\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCozy\";\n\t\t\t}\n\t\t}\n\t\treturn this.contentDensityClass;\n\t}\n\n}\n"],"mappings":";;;;QACSA,OAAO,GAAAC,aAAA;EAAA,MAETC,MAAM,GAAAC,sBAAA,CAAAC,QAAA;EAEb;AACA;AACA;EAFA,MAGqBC,SAAS,GAASC,WAAW,CAAAC,MAAA;IAEnCC,QAAQ,EAAG;MACxBC,QAAQ,EAAE;IACX,CAAC;IAIMC,IAAI,WAAAC,MAAA,EAAU;MACpB;MACAC,+BAAA;MAEA,IAAI,CAACC,QAAQ,CAACX,MAAM,CAACY,iBAAiB,EAAE,EAAE,QAAQ,CAAC;;MAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACE;MACA,IAAI,CAACC,SAAS,EAAE,CAACC,UAAU,EAAE;IAC9B,CAAC;IASMC,sBAAsB,WAAAC,wBAAA,EAAY;MACxC,IAAI,IAAI,CAACC,mBAAmB,KAAKC,SAAS,EAAE;QAC3C;QACA,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,eAAe,CAAC,IAAIH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,kBAAkB,CAAC,EAAE;UAC9G,IAAI,CAACL,mBAAmB,GAAG,EAAE;QAC9B,CAAC,MAAM,IAAI,CAACnB,OAAO,CAACyB,KAAK,EAAE;UAAE;UAC5B,IAAI,CAACN,mBAAmB,GAAG,kBAAkB;QAC9C,CAAC,MAAM;UACN;UACA,IAAI,CAACA,mBAAmB,GAAG,eAAe;QAC3C;MACD;MACA,OAAO,IAAI,CAACA,mBAAmB;IAChC;EAAC;EAAA,OAhDmBd,SAAS;AAAA"}